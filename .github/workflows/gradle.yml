# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: "Setup Gradle"
        uses: gradle/gradle-build-action@v2

      - name: Build application
        run: ./gradlew bootJar
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./DockerFile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: anshemonaev/fsi:latest
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
      - name: Push image
        run: docker push anshemonaev/fsi:latest
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: "Setup Gradle"
      uses: gradle/gradle-build-action@v2
      
    - name: "Start container"
      run: docker-compose -f "docker-compose.yml" up -d --build
      
    - name: "Check logs"
      run: docker logs app
      
    - name: "Run test"
      run: |
            docker ps -a
            ./gradlew test
            
    - name: "Stop containers"
      if: always()
      run: docker-compose -f "docker-compose.yml" down
